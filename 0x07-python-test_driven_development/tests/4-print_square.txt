The addition module
================================

This module has only one function called 4-print square
as its name suggest it prints a grid with the "#" character

using the module
----------------
This function does not return anything but prints a square.

>>> print_square = __import__('4-print_square').print_square

Numbers
=======
The values that recieves the function can be integers or floats
but never taking a value that is under 0

Integers & floats
=================

    >>> print_square(1)
    #
    >>> print_square(4)
    ####
    ####
    ####
    ####
    >>> print_square(10)
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    >>> print_square(0)

    >>> print_square("hello")
    Traceback (most recent call last):
        ...
    TypeError: size must be an integer

    >>> print_square([1, 2, 3])
    Traceback (most recent call last):
        ...
    TypeError: size must be an integer

    >>> print_square({1:"a", 2:"b", 3:"c"})
    Traceback (most recent call last):
        ...
    TypeError: size must be an integer

    >>> print_square((1, 2, 3))
    Traceback (most recent call last):
        ...
    TypeError: size must be an integer

Note
====

if there are more values than the function can handle a
exception will rise, also in Python3 leading zeros are not
allowed on numbers.

   >>> print_square(1, 2, 3)
   Traceback (most recent call last):
       ...
   TypeError: print_square() takes 1 positional argument but 3 were given

   >>> print_square()
   Traceback (most recent call last):
       ...
   TypeError: print_square() missing 1 required positional argument: 'size'
   >>> print_square(10j)
   Traceback (most recent call last):
       ...
   TypeError: size must be an integer
